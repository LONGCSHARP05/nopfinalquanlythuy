#include<iostream>
#include<fstream>
#include<string>
#include<iomanip>
#include<vector>
#include "DMThuoc.hpp"
#include "DMChuNuoi.hpp"
#include "PhieuKhamBenh.hpp"
#include "PhieuKhamBenh.cpp"
#include "LichTiemPhong.hpp"

#include <thread>
#include <chrono>

using namespace std;

// H√†m x√≥a m√†n h√¨nh (t√πy h·ªá ƒëi·ªÅu h√†nh)
void clearScreen() {
    system("cls"); // Windows
}

// H√†m t·∫°o hi·ªáu ·ª©ng g√µ ch·ªØ
void typingEffect(const string& text, int delay = 50) {
    for (char c : text) {
        cout << c << flush;
        this_thread::sleep_for(chrono::milliseconds(delay));
    }
}

// H√†m hi·ªÉn th·ªã banner ti√™u ƒë·ªÅ h·ªá th·ªëng
void hienThiBanner() {
    cout << R"(
   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà
  ‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë  ‚ñà‚ñà‚ñë‚ñë‚ñë‚ñà‚ñà   ‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà  ‚ñë‚ñë‚ñë‚ñà‚ñà‚ñë‚ñë‚ñë  ‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà  ‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà
 ‚ñë‚ñà‚ñà          ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñë  ‚ñà‚ñà‚ñë   ‚ñà‚ñà    ‚ñë‚ñà‚ñà     ‚ñà‚ñà    ‚ñà‚ñà ‚ñë‚ñà‚ñà    ‚ñà‚ñà    ‚ñë‚ñà‚ñà
 ‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñë   ‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñë ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà    ‚ñë‚ñà‚ñà     ‚ñà‚ñà   ‚ñë‚ñà‚ñà  ‚ñà‚ñà   ‚ñë‚ñà‚ñà
 ‚ñë‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë   ‚ñà‚ñà   ‚ñë‚ñà‚ñà‚ñë ‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà    ‚ñë‚ñà‚ñà     ‚ñà‚ñà   ‚ñë‚ñà‚ñà  ‚ñà‚ñà   ‚ñë‚ñà‚ñà
 ‚ñë‚ñà‚ñà      ‚ñë   ‚ñà‚ñà   ‚ñë‚ñà‚ñà‚ñë ‚ñà‚ñà   ‚ñë‚ñà‚ñà    ‚ñë‚ñà‚ñà     ‚ñà‚ñà   ‚ñë‚ñà‚ñà  ‚ñà‚ñà   ‚ñë‚ñà‚ñà
 ‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñë   ‚ñà‚ñà   ‚ñë‚ñà‚ñà‚ñë ‚ñà‚ñà   ‚ñë‚ñà‚ñà    ‚ñë‚ñà‚ñà     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà
  ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë    ‚ñë‚ñë    ‚ñë‚ñë  ‚ñë‚ñë    ‚ñë‚ñë     ‚ñë‚ñë     ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë   ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë

)";
}

// H√†m hi·ªÉn th·ªã menu h·ªá th·ªëng

   
void hienThiMenu() {
cout<<   "-------------------------------------------------------------\n";
cout<<   "|         üè• H·ªÜ TH·ªêNG QU·∫¢N L√ù PH√íNG KH√ÅM TH√ö Y üê∂üê±         |\n";
cout<<   "-------------------------------------------------------------\n";
    cout << "===================================================\n";
    cout << "|  [1]  üìÇ Qu·∫£n l√Ω danh s√°ch ch·ªß nu√¥i             |\n";
    cout << "|  [2]  üíä Qu·∫£n l√Ω danh m·ª•c thu·ªëc                 |\n";
    cout << "|  [3]  üìú Qu·∫£n l√Ω danh s√°ch phi·∫øu kh√°m b·ªánh      |\n";
    cout << "|  [4]  üí∞ Th·ªëng k√™ doanh thu                     |\n";
    cout << "|  [5]  üìà Th·ªëng k√™ thu·ªëc s·ª≠ d·ª•ng nhi·ªÅu nh·∫•t      |\n";
    cout << "|  [6]  üì§ Xu·∫•t b√°o c√°o kh√°m b·ªánh ra file         |\n";
    cout << "|  [7]  üóìÔ∏è  L·ªãch nh·∫Øc ti√™m ph√≤ng                   |\n";
    cout << "|  [0]  üö™ Tho√°t ch∆∞∆°ng tr√¨nh                     |\n";
    cout << "==================================================\n";
    
}


// H√†m hi·ªÉn th·ªã khung vi·ªÅn ƒë·ªông khi m·ªü ch∆∞∆°ng tr√¨nh
void hieuUngVien() {
    string border = "----------------------------------------------";
    for (int i = 0; i <= border.length(); i++) {
        cout << "\r" << border.substr(0, i) << flush;
        this_thread::sleep_for(chrono::milliseconds(30));
    }
    cout << endl;
}






// H√†m ch√≠nh
int main() {
    

    int luaChon;
    hieuUngVien();   // Hi·ªáu ·ª©ng vi·ªÅn m·ªü ƒë·∫ßu
        hienThiBanner(); // Hi·ªÉn th·ªã banner h·ªá th·ªëng
        hienThiMenu();   // Hi·ªÉn th·ªã menu ch·ª©c nƒÉng // Hi·ªÉn th·ªã giao di·ªán ng∆∞·ªùi d√πng
        
        vector <PhieuKhamBenh> danhSachPhieu;
        // ƒê·ªçc file v√†o vector
        PhieuKhamBenh::docFile(danhSachPhieu);

        vector<DMThuoc> danhSachThuoc;
        DMThuoc::docFile(danhSachThuoc);

        vector<DMChuNuoi> danhSachChuNuoi;
        DMChuNuoi::docFile(danhSachChuNuoi);

        vector<LichTiemPhong> danhSachLichTiem;
        LichTiemPhong::docFile(danhSachLichTiem);
        
        // Khai b√°o vector doanh thu
        vector<DoanhThu> doanhThuNgay, doanhThuThang, doanhThuNam;


    do {
        cout << "Nhap lua chon: ";
       std::cin>>luaChon;
        
        switch (luaChon) {
            case 1:
                // Qu·∫£n l√Ω danh s√°ch ch·ªß nu√¥i
                DMChuNuoi::menuQuanLyChuNuoi(danhSachChuNuoi);
                break;
            case 2:
                // Qu·∫£n l√Ω danh m·ª•c thu·ªëc
                DMThuoc::menuQuanLyThuoc(danhSachThuoc);
                break;
            case 3:
                // Qu·∫£n l√Ω danh s√°ch phi·∫øu kh√°m b·ªánh
                PhieuKhamBenh::menuQuanLyPhieuKhamBenh(danhSachPhieu, danhSachChuNuoi, danhSachThuoc);
                break;
            case 4:
                // Th·ªëng k√™ doanh thu
                menuThongKeDoanhThu(danhSachPhieu, danhSachThuoc);
                break;
            case 5:
                // Th·ªëng k√™ thu·ªëc s·ª≠ d·ª•ng nhi·ªÅu nh·∫•t
                thongKeLoaiThuoc(danhSachPhieu, danhSachThuoc);
                break;
            case 6:
                // Xu·∫•t b√°o c√°o kh√°m b·ªánh ra file
                PhieuKhamBenh::xuatBaoCaoKhamBenhRaFile(danhSachPhieu, "BaoCaoKhamBenh.txt");
                break;
            case 7:
                // L·ªãch nh·∫Øc ti√™m ph√≤ng
                LichTiemPhong::menuQuanLyLichTiemPhong(danhSachLichTiem, danhSachChuNuoi);
                break;
            
            case 0:
                cout << "Tho√°t ch∆∞∆°ng tr√¨nh.\n";
                break;
            default:
                cout << "L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá! Vui l√≤ng th·ª≠ l·∫°i.\n";
                continue;
            
        }
        cout << "Nh·∫•n enter ƒë·ªÉ ti·∫øp t·ª•c...\n";
       cin.get();
    } while (luaChon != 0);

    


return 0;

}